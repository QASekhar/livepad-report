{"uid":"df5d5d730304dbca","name":"Verify Contact Us page title","fullName":"tests.test_contactUs.TestContactUs#test_contact_us_title","historyId":"281ff92d33a2258b72910b63aaa9d415","time":{"start":1750684736883,"stop":1750684747392,"duration":10509},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_contactUs.TestContactUs object at 0x000001841EFCF370>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff4ff14efc6a8f2d731511cd38daf640\")>\nconfig = <config.config_loader.ConfigLoader object at 0x0000018420530460>\n\n    @pytest.mark.smoke\n    @pytest.mark.sanity\n    @allure.title(\"Verify Contact Us page title\")\n    def test_contact_us_title(self, browser, config):\n        page = ContactUsPage(browser, config)\n>       WebDriverWait(browser, 10).until(EC.title_is(page.expected[\"title\"]))\n\ntests\\test_contactUs.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ff4ff14efc6a8f2d731511cd38daf640\")>\nmethod = <function title_is.<locals>._predicate at 0x000001841EF5F370>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\ProjectForAutomation\\livePad_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750684733543,"stop":1750684733678,"duration":135},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1750684733678,"stop":1750684733678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1750684733678,"stop":1750684736881,"duration":3203},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1750684733678,"stop":1750684733678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"config","time":{"start":1750684736881,"stop":1750684736882,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"browser::0","time":{"start":1750684790001,"stop":1750684792427,"duration":2426},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Contact Us Page Tests"},{"name":"suite","value":"Contact Us Page Suite"},{"name":"tag","value":"sanity"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestContactUs"},{"name":"host","value":"DESKTOP-92FVP13"},{"name":"thread","value":"22080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_contactUs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","sanity"]},"source":"df5d5d730304dbca.json","parameterValues":[]}